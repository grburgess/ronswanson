{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "7a3cc8c6",
   "metadata": {},
   "source": [
    "# Intro\n",
    "\n",
    "So you need to build a table model? 3ML via astromodels provides you with nice\n",
    "facilities to accomplish this task. But often, we need to interface with\n",
    "computationally expensive simulations and require many runs of these\n",
    "simulations. This is a very generic task and Ron Swanson wants to make things as\n",
    "simple as possible for you. Making things complicated is annoying.\n",
    "\n",
    "![alt text](https://raw.githubusercontent.com/grburgess/ronswanson/master/docs/media/mad.jpg)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f18a2ed6",
   "metadata": {},
   "source": [
    "## Example with a Band function\n",
    "\n",
    "Let's say we want to make a table model from a Band function.\n",
    "\n",
    "We pick a parameter grid and a grid of energies for our simulation. We can enter\n",
    "these in a YAML file:\n",
    "\n",
    "```yaml\n",
    "alpha:\n",
    "  custom: no\n",
    "  vmin: -1\n",
    "  vmax: 0\n",
    "  scale: \"linear\"\n",
    "  n_points: 10\n",
    "\n",
    "beta:\n",
    "  custom: no\n",
    "  vmin: -3\n",
    "  vmax: -2\n",
    "  scale: \"linear\"\n",
    "  n_points: 10\n",
    "\n",
    "epeak:\n",
    "  custom: yes\n",
    "  values: [50., 69.74 , 97.29, 135.72, 189.32, 264.097, 368.4, 513.9, 716.87, 1000.]\n",
    "\n",
    "energy_grid:\n",
    "  custom: no\n",
    "  vmin: 10\n",
    "  vmax: 1000\n",
    "  scale: \"log\"\n",
    "  n_points: 50\n",
    "\n",
    "\n",
    "```\n",
    "\n",
    "As can be seen, we can specify the parameter/energy grids ourselves, or we can\n",
    "specify their ranges and let it be done for us.\n",
    "\n",
    "It is possible that a simulation outputs more than one type of array (photons,\n",
    "electrons, neutrinos, etc.). In this case, each output may have its own energy\n",
    "grid. These can be specified as ```energy_grid_0```,\n",
    "```energy_grid_1```...```energy_grid_n```. More on how to grab the output from\n",
    "these below.\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "### The Simulation class\n",
    "\n",
    "Now we need to make a class for the simulation. We will inherit from the\n",
    "simulation class and specify a `_run_call` function that tells the program how\n",
    "to run the simulation for a given set of parameters. This function **must**\n",
    "return a dictionary of arrays of photon / particle fluxes for the given\n",
    "energies. The keys of the dictionary should be ```output_0```,\n",
    "```output_1```...```output_n``` for each type of output corresponding to the\n",
    "energy grids above.\n",
    "\n",
    "\n",
    "\n",
    "```python\n",
    "from typing import Dict\n",
    "\n",
    "import numpy as np\n",
    "from astromodels import Band\n",
    "import ronswanson as dukesilver\n",
    "\n",
    "\n",
    "class BandSimulation(dukesilver.Simulation):\n",
    "    def __init__(\n",
    "        self,\n",
    "        simulation_id: int,\n",
    "        parameter_set: Dict[str, float],\n",
    "        energy_grid: np.ndarray,\n",
    "        out_file: str,\n",
    "    ) -> None:\n",
    "        super().__init__(simulation_id, parameter_set, energy_grid, out_file)\n",
    "\n",
    "    def _run_call(self) -> np.ndarray:\n",
    "\n",
    "        b = Band(\n",
    "            K=1,\n",
    "            alpha=self._parameter_set[\"alpha\"],\n",
    "            beta=self._parameter_set[\"beta\"],\n",
    "            xp=self._parameter_set[\"epeak\"],\n",
    "        )\n",
    "\n",
    "        return dict(output_0=b(self._energy_grid))\n",
    "\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d4399d5",
   "metadata": {},
   "source": [
    "### The Simulation Builder\n",
    "\n",
    "Now we need to tell the simulation builder a few things so it can construct our\n",
    "files for us. We have stored this YAML file in the repo itself. You should use\n",
    "your own!\n",
    "\n",
    "The `SimulationBuilder` class takes a parameter grid, the name of the file that\n",
    "will be created, the import line for the custom simulation class, the number of\n",
    "cores and nodes to execute on.\n",
    "\n",
    "We configure this with a YAML file.\n",
    "\n",
    "```yaml\n",
    "# the import line to get our simulation\n",
    "# we ALWAYS import as Simulation\n",
    "import_line: \"from ronswanson.band_simulation import BandSimulation as Simulation\"\n",
    "\n",
    "# the parameter grid\n",
    "parameter_grid: \"test_params.yml\"\n",
    "\n",
    "# name of our database\n",
    "out_file: database.h5\n",
    "\n",
    "# clean out the simulation directory after\n",
    "# the run. It is defaulted to yes\n",
    "clean: yes\n",
    "\n",
    "simulation:\n",
    "\n",
    "  # number of multi-process jobs\n",
    "  n_mp_jobs: 8\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "08bda671",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:04.125026Z",
     "iopub.status.busy": "2022-09-25T17:20:04.124736Z",
     "iopub.status.idle": "2022-09-25T17:20:06.406139Z",
     "shell.execute_reply": "2022-09-25T17:20:06.404977Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">17:20:05 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The naima package is not available. Models that depend on it will not be         </span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/functions.py#48\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">48</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                         </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m17:20:05\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The naima package is not available. Models that depend on it will not be        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=718833;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=746143;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/functions.py#48\u001b\\\u001b[2m48\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it  </span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/functions.py#69\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">69</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">will not be available.                                                            </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=351602;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=394139;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/functions.py#69\u001b\\\u001b[2m69\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mwill not be available.                                                           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The ebltable package is not available. Models that depend on it will not be     </span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/absorption.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">absorption.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/absorption.py#36\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">36</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The ebltable package is not available. Models that depend on it will not be    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=902036;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/absorption.py\u001b\\\u001b[2mabsorption.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=445750;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/functions_1D/absorption.py#36\u001b\\\u001b[2m36\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">17:20:06 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of K to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m17:20:06\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of K to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=34698;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=244064;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of K to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of K to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=351385;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=798640;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of K to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of K to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=96660;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=816887;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of K to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of K to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=347290;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=192648;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of F to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of F to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=638223;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=47986;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of K to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of K to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=979178;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=942859;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import ronswanson\n",
    "\n",
    "sb = ronswanson.SimulationBuilder.from_yaml(\"sim_build.yml\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "441651b1",
   "metadata": {},
   "source": [
    "Now a python file will be written to the disk which you can run to create your\n",
    "simulation runs. we can have a look at the file.\n",
    "\n",
    "```\n",
    "from ronswanson.band_simulation import BandSimulation as Simulation\n",
    "from joblib import Parallel, delayed\n",
    "from ronswanson import ParameterGrid\n",
    "\n",
    "pg = ParameterGrid.from_yaml('/Users/jburgess/coding/projects/ronswanson/parameters.yml')\n",
    "def func(i):\n",
    "\tparams = pg.at_index(i)\n",
    "\tsimulation = Simulation(i, params, pg.energy_grid.grid,'/Users/jburgess/coding/projects/ronswanson/database.h5')\n",
    "\tsimulation.run()\n",
    "\n",
    "iteration = [i for i in range(0, pg.n_points)]\n",
    "\n",
    "Parallel(n_jobs=8)(delayed(func)(i) for i in iteration)\n",
    "\n",
    "```\n",
    "\n",
    "<!-- #region --> Now this simply uses `joblib` to farm out the iterations over\n",
    "the parameter combinations. If iterations are to also be divided across HPC\n",
    "nodes, the python script will be modified and an associated `SLURM` script will\n",
    "be generated."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e33639dc",
   "metadata": {},
   "source": [
    "#### SLURM and advanced options\n",
    "\n",
    "Configuring for SLURM and SBATCH systems is similar, but there are a few more options. ```ronswanson``` will set up bash scripts that will submit jobs to complete the simulations and then gather them into a database.\n",
    "\n",
    "Here is an example script:\n",
    "\n",
    "```yaml\n",
    "\n",
    "# the import line to get our simulation\n",
    "# we ALWAYS import as Simulation\n",
    "import_line: \"from ronswanson.band_simulation import BandSimulation as Simulation\"\n",
    "\n",
    "# the parameter grid\n",
    "parameter_grid: \"test_params.yml\"\n",
    "\n",
    "# name of our database\n",
    "out_file: database.h5\n",
    "\n",
    "simulation:\n",
    "\n",
    "  # number of multi-process jobs PER node\n",
    "  n_mp_jobs: 9\n",
    "\n",
    "  # number of cpus to request per node (leave room for threads)\n",
    "  n_cores_per_node: 72\n",
    "\n",
    "  # number of runs per node\n",
    "  # here, the 9 mp jobs will take turns with these 500 runs\n",
    "  run_per_node: 500\n",
    "\n",
    "  # the switch to say we are performing SLURM job\n",
    "  use_nodes: yes\n",
    "\n",
    "  # optional maximum number of nodes to request\n",
    "  # if more than this are required, multiple\n",
    "  # submission scripts are generated\n",
    "  max_nodes: 300\n",
    "\n",
    "  # the max run time for each job in the array\n",
    "  time:\n",
    "    hrs: 10\n",
    "    min: 30\n",
    "    sec: 0\n",
    "\n",
    "gather:\n",
    "\n",
    "  # after the simulations run\n",
    "  # you submit and MPI job that collects the simualtions\n",
    "\n",
    "  # number of simulations to collect per MPI rank\n",
    "  n_gather_per_core: 100\n",
    "\n",
    "  # number of cpus per node\n",
    "  n_cores_per_node: 70\n",
    "\n",
    "  # maximum job time\n",
    "  time:\n",
    "    hrs: 1\n",
    "    min: 0\n",
    "    sec: 0\n",
    "\n",
    "```\n",
    "\n",
    "\n",
    "Additional configuration of SLURM jobs can be handle with the ```ronswanson``` configuration."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ad7ac88",
   "metadata": {},
   "source": [
    "### The Database\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fd8da08d",
   "metadata": {},
   "source": [
    "Upon running the script, an HDF5 database of the runs is created which contains\n",
    "all the information needed to build a table model in `3ML`.  <!-- #endregion -->"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "568a9f01",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:06.413235Z",
     "iopub.status.busy": "2022-09-25T17:20:06.411107Z",
     "iopub.status.idle": "2022-09-25T17:20:06.417349Z",
     "shell.execute_reply": "2022-09-25T17:20:06.416515Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from ronswanson.utils.package_data import get_path_of_data_file\n",
    "from ronswanson import Database"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e6622a0f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:06.420825Z",
     "iopub.status.busy": "2022-09-25T17:20:06.420560Z",
     "iopub.status.idle": "2022-09-25T17:20:06.432225Z",
     "shell.execute_reply": "2022-09-25T17:20:06.431376Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "OrderedDict([('alpha', array([-1. , -0.5,  0. ,  0.5,  1. ], dtype=float32)),\n",
       "             ('beta',\n",
       "              array([-3.  , -2.75, -2.5 , -2.25, -2.  ], dtype=float32)),\n",
       "             ('epeak',\n",
       "              array([  50.   ,   69.74 ,   97.29 ,  135.72 ,  189.32 ,  264.097,\n",
       "                      368.4  ,  513.9  ,  716.87 , 1000.   ], dtype=float32))])"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "db = Database.from_file(get_path_of_data_file(\"test_database.h5\"))\n",
    "db.parameter_ranges"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9786850b",
   "metadata": {},
   "source": [
    "Now we can use the database to construct and save a table model for `3ML`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c2d67b4c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:06.435733Z",
     "iopub.status.busy": "2022-09-25T17:20:06.435289Z",
     "iopub.status.idle": "2022-09-25T17:20:06.727608Z",
     "shell.execute_reply": "2022-09-25T17:20:06.726704Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Energy unit is not a Quantity instance, so units has not been provided.    </span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/template_model.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">template_model.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/template_model.py#106\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">106</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">Using keV.                                                                  </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                     </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m Energy unit is not a Quantity instance, so units has not been provided.   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=840845;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/template_model.py\u001b\\\u001b[2mtemplate_model.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=53041;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/template_model.py#106\u001b\\\u001b[2m106\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mUsing keV.                                                                 \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                     \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d796e4d69c8348379a2022dadb943f8e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/250 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: a new model for 3ML</li>\n",
       "\n",
       "<li>formula: n.a.</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>K: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: None</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>scale: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: None</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>alpha: \n",
       "<ul>\n",
       "\n",
       "<li>value: 0.0</li>\n",
       "\n",
       "<li>desc: None</li>\n",
       "\n",
       "<li>min_value: -1.0</li>\n",
       "\n",
       "<li>max_value: 1.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>beta: \n",
       "<ul>\n",
       "\n",
       "<li>value: -2.5</li>\n",
       "\n",
       "<li>desc: None</li>\n",
       "\n",
       "<li>min_value: -3.0</li>\n",
       "\n",
       "<li>max_value: -2.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.25</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>epeak: \n",
       "<ul>\n",
       "\n",
       "<li>value: 226.70849609375</li>\n",
       "\n",
       "<li>desc: None</li>\n",
       "\n",
       "<li>min_value: 50.0</li>\n",
       "\n",
       "<li>max_value: 1000.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 22.670849609375</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: a new model for 3ML\n",
       "  * formula: n.a.\n",
       "  * parameters:\n",
       "    * K:\n",
       "      * value: 1.0\n",
       "      * desc: None\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * scale:\n",
       "      * value: 1.0\n",
       "      * desc: None\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * alpha:\n",
       "      * value: 0.0\n",
       "      * desc: None\n",
       "      * min_value: -1.0\n",
       "      * max_value: 1.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * beta:\n",
       "      * value: -2.5\n",
       "      * desc: None\n",
       "      * min_value: -3.0\n",
       "      * max_value: -2.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.25\n",
       "      * free: true\n",
       "    * epeak:\n",
       "      * value: 226.70849609375\n",
       "      * desc: None\n",
       "      * min_value: 50.0\n",
       "      * max_value: 1000.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 22.670849609375\n",
       "      * free: true"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "table_model = db.to_3ml(\"my_model\", \"a new model for 3ML\")\n",
    "table_model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3aafc068",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:06.731608Z",
     "iopub.status.busy": "2022-09-25T17:20:06.731342Z",
     "iopub.status.idle": "2022-09-25T17:20:07.492645Z",
     "shell.execute_reply": "2022-09-25T17:20:07.491593Z"
    }
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from astromodels import Band\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca4042ee",
   "metadata": {},
   "source": [
    "We can compare our table model with the Band function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0c7dfc72",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:07.497716Z",
     "iopub.status.busy": "2022-09-25T17:20:07.497202Z",
     "iopub.status.idle": "2022-09-25T17:20:10.441289Z",
     "shell.execute_reply": "2022-09-25T17:20:10.440397Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f90fdc61430>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "ene = np.geomspace(10, 1000, 100)\n",
    "\n",
    "b = Band()\n",
    "b.alpha = -0.6\n",
    "b.beta = -2.5\n",
    "b.xp = 250\n",
    "b.K = 1.05\n",
    "\n",
    "table_model.alpha = -0.6\n",
    "table_model.beta = -2.5\n",
    "table_model.epeak = 250\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.loglog(\n",
    "    ene, ene**2 * table_model(ene), color='#33FFC4', lw=3, label=\"table\"\n",
    ")\n",
    "ax.loglog(ene, ene**2 * b(ene), color='#C989FB', lw=3, label=\"band\")\n",
    "\n",
    "ax.set(xlabel=\"energy\", ylabel=\"vFv\")\n",
    "\n",
    "ax.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3239c59",
   "metadata": {},
   "source": [
    "Great! That was way easier than programming everything yourself.\n",
    "\n",
    "![alt text](https://raw.githubusercontent.com/grburgess/ronswanson/master/docs/media/happy.jpeg)\n",
    "\n",
    "\n",
    "Suppose we did not want to use all the values in the parameter ranges we have simulated. Bigger interpolation tables take up memory when fitting.\n",
    "\n",
    "We can select a subset of the parameter ranges when building the table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "58e755a5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:10.445130Z",
     "iopub.status.busy": "2022-09-25T17:20:10.444828Z",
     "iopub.status.idle": "2022-09-25T17:20:10.646556Z",
     "shell.execute_reply": "2022-09-25T17:20:10.645621Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">17:20:10 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Energy unit is not a Quantity instance, so units has not been provided.    </span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/template_model.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">template_model.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/template_model.py#106\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">106</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">Using keV.                                                                  </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                     </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m17:20:10\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m Energy unit is not a Quantity instance, so units has not been provided.   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=223323;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/template_model.py\u001b\\\u001b[2mtemplate_model.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=237635;file:///opt/hostedtoolcache/Python/3.8.13/x64/lib/python3.8/site-packages/astromodels/functions/template_model.py#106\u001b\\\u001b[2m106\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mUsing keV.                                                                 \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                     \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a9660f30f15746389daf099000006a2f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/45 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: a new model for 3ML</li>\n",
       "\n",
       "<li>formula: n.a.</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>K: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: None</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>scale: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: None</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>alpha: \n",
       "<ul>\n",
       "\n",
       "<li>value: -0.5</li>\n",
       "\n",
       "<li>desc: None</li>\n",
       "\n",
       "<li>min_value: -1.0</li>\n",
       "\n",
       "<li>max_value: 0.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.05</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>beta: \n",
       "<ul>\n",
       "\n",
       "<li>value: -2.5</li>\n",
       "\n",
       "<li>desc: None</li>\n",
       "\n",
       "<li>min_value: -3.0</li>\n",
       "\n",
       "<li>max_value: -2.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.25</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>epeak: \n",
       "<ul>\n",
       "\n",
       "<li>value: 368.3999938964844</li>\n",
       "\n",
       "<li>desc: None</li>\n",
       "\n",
       "<li>min_value: 264.09698486328125</li>\n",
       "\n",
       "<li>max_value: 513.9000244140625</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 36.83999938964844</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: a new model for 3ML\n",
       "  * formula: n.a.\n",
       "  * parameters:\n",
       "    * K:\n",
       "      * value: 1.0\n",
       "      * desc: None\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * scale:\n",
       "      * value: 1.0\n",
       "      * desc: None\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * alpha:\n",
       "      * value: -0.5\n",
       "      * desc: None\n",
       "      * min_value: -1.0\n",
       "      * max_value: 0.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.05\n",
       "      * free: true\n",
       "    * beta:\n",
       "      * value: -2.5\n",
       "      * desc: None\n",
       "      * min_value: -3.0\n",
       "      * max_value: -2.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.25\n",
       "      * free: true\n",
       "    * epeak:\n",
       "      * value: 368.3999938964844\n",
       "      * desc: None\n",
       "      * min_value: 264.09698486328125\n",
       "      * max_value: 513.9000244140625\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 36.83999938964844\n",
       "      * free: true"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "selection = {}\n",
    "selection['alpha'] = dict(vmax=0)\n",
    "selection['epeak'] = dict(vmin=200, vmax=700)\n",
    "\n",
    "table_model_small = db.to_3ml(\n",
    "    \"my_model_small\", \"a new model for 3ML\", **selection\n",
    ")\n",
    "table_model_small"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c6178b4c",
   "metadata": {},
   "source": [
    "Awesome! Now go enjoy your weekend.\n",
    "\n",
    "![alt text](https://raw.githubusercontent.com/grburgess/ronswanson/master/docs/media/enjoy.jpg)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a94abc8d",
   "metadata": {},
   "source": [
    "## User configuration\n",
    "\n",
    "A simple YAML configuration is stored in ```~/.config/ronswanson/ronswanson_config.yml```. It allows for configuring the log as well as putting default SLURM configuration parameters.\n",
    "\n",
    "An example:\n",
    "\n",
    "```yaml\n",
    "\n",
    "logging:\n",
    "  'on': on\n",
    "  level: INFO\n",
    "slurm:\n",
    "\n",
    "  # where to send SLURM emails\n",
    "  user_email: my_email.com\n",
    "\n",
    "  # modules to be loaded for MPI jobs (gather script)\n",
    "  mpi_modules: ['intel/21.4.0', 'impi/2021.4',\n",
    "  'anaconda/3/2021.11','hdf5-mpi/1.12.2', 'mpi4py/3.0.3', 'h5py-mpi/2.10']\n",
    "\n",
    "  # modules to load for simulation jobs\n",
    "  modules: ['intel/21.4.0', 'impi/2021.4', 'anaconda/3/2021.11','hdf5-serial/1.12.2']\n",
    "\n",
    "  # the python binary for running the simulation jobs\n",
    "  python: \"python3\"\n",
    "\n",
    "  # where to store the simulations before\n",
    "  # database creation (default will be the directory where the code is run)\n",
    "  store_dir: /ptmp/jburgess\n",
    "\n",
    "```\n",
    "\n",
    "The configuration can be modified on the fly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6238cb4b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:10.650950Z",
     "iopub.status.busy": "2022-09-25T17:20:10.650683Z",
     "iopub.status.idle": "2022-09-25T17:20:10.655059Z",
     "shell.execute_reply": "2022-09-25T17:20:10.654184Z"
    }
   },
   "outputs": [],
   "source": [
    "from ronswanson import ronswanson_config, show_configuration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2a1efd88",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:10.659143Z",
     "iopub.status.busy": "2022-09-25T17:20:10.658871Z",
     "iopub.status.idle": "2022-09-25T17:20:10.666826Z",
     "shell.execute_reply": "2022-09-25T17:20:10.666180Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #af5fd7; text-decoration-color: #af5fd7; font-weight: bold\">config</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">┣━━ </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7; font-weight: bold\">logging</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">┃   ┣━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">on: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">True</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">┃   ┗━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">level: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">WARNING</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">┗━━ </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7; font-weight: bold\">slurm</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">    ┣━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">user_email: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">user@email.com</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">    ┣━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">modules: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">None</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">    ┣━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">mpi_modules: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">None</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">    ┣━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">python: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">python</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">    ┗━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">store_dir: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">None</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;38;5;134mconfig\u001b[0m\n",
       "\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;134mlogging\u001b[0m\n",
       "\u001b[38;5;134m┃   \u001b[0m\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;49mon: \u001b[0m\u001b[1;5;38;5;69mTrue\u001b[0m\n",
       "\u001b[38;5;134m┃   \u001b[0m\u001b[38;5;134m┗━━ \u001b[0m\u001b[1;38;5;49mlevel: \u001b[0m\u001b[1;5;38;5;69mWARNING\u001b[0m\n",
       "\u001b[38;5;134m┗━━ \u001b[0m\u001b[1;38;5;134mslurm\u001b[0m\n",
       "\u001b[38;5;134m    \u001b[0m\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;49muser_email: \u001b[0m\u001b[1;5;38;5;69muser@email.com\u001b[0m\n",
       "\u001b[38;5;134m    \u001b[0m\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;49mmodules: \u001b[0m\u001b[1;5;38;5;69mNone\u001b[0m\n",
       "\u001b[38;5;134m    \u001b[0m\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;49mmpi_modules: \u001b[0m\u001b[1;5;38;5;69mNone\u001b[0m\n",
       "\u001b[38;5;134m    \u001b[0m\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;49mpython: \u001b[0m\u001b[1;5;38;5;69mpython\u001b[0m\n",
       "\u001b[38;5;134m    \u001b[0m\u001b[38;5;134m┗━━ \u001b[0m\u001b[1;38;5;49mstore_dir: \u001b[0m\u001b[1;5;38;5;69mNone\u001b[0m\n"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "show_configuration()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bc3a3bf6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:10.670496Z",
     "iopub.status.busy": "2022-09-25T17:20:10.670231Z",
     "iopub.status.idle": "2022-09-25T17:20:10.675801Z",
     "shell.execute_reply": "2022-09-25T17:20:10.674940Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'user@email.com'"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ronswanson_config.slurm.user_email"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5630674c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:10.682568Z",
     "iopub.status.busy": "2022-09-25T17:20:10.680412Z",
     "iopub.status.idle": "2022-09-25T17:20:10.686328Z",
     "shell.execute_reply": "2022-09-25T17:20:10.685467Z"
    }
   },
   "outputs": [],
   "source": [
    "ronswanson_config.slurm.user_email = \"workemail@email.com\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "95327de4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-25T17:20:10.690014Z",
     "iopub.status.busy": "2022-09-25T17:20:10.689697Z",
     "iopub.status.idle": "2022-09-25T17:20:10.697124Z",
     "shell.execute_reply": "2022-09-25T17:20:10.696266Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #af5fd7; text-decoration-color: #af5fd7; font-weight: bold\">config</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">┣━━ </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7; font-weight: bold\">logging</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">┃   ┣━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">on: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">True</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">┃   ┗━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">level: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">WARNING</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">┗━━ </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7; font-weight: bold\">slurm</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">    ┣━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">user_email: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">workemail@email.com</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">    ┣━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">modules: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">None</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">    ┣━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">mpi_modules: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">None</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">    ┣━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">python: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">python</span>\n",
       "<span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">    ┗━━ </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold\">store_dir: </span><span style=\"color: #5f87ff; text-decoration-color: #5f87ff; font-weight: bold\">None</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;38;5;134mconfig\u001b[0m\n",
       "\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;134mlogging\u001b[0m\n",
       "\u001b[38;5;134m┃   \u001b[0m\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;49mon: \u001b[0m\u001b[1;5;38;5;69mTrue\u001b[0m\n",
       "\u001b[38;5;134m┃   \u001b[0m\u001b[38;5;134m┗━━ \u001b[0m\u001b[1;38;5;49mlevel: \u001b[0m\u001b[1;5;38;5;69mWARNING\u001b[0m\n",
       "\u001b[38;5;134m┗━━ \u001b[0m\u001b[1;38;5;134mslurm\u001b[0m\n",
       "\u001b[38;5;134m    \u001b[0m\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;49muser_email: \u001b[0m\u001b[1;5;38;5;69mworkemail@email.com\u001b[0m\n",
       "\u001b[38;5;134m    \u001b[0m\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;49mmodules: \u001b[0m\u001b[1;5;38;5;69mNone\u001b[0m\n",
       "\u001b[38;5;134m    \u001b[0m\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;49mmpi_modules: \u001b[0m\u001b[1;5;38;5;69mNone\u001b[0m\n",
       "\u001b[38;5;134m    \u001b[0m\u001b[38;5;134m┣━━ \u001b[0m\u001b[1;38;5;49mpython: \u001b[0m\u001b[1;5;38;5;69mpython\u001b[0m\n",
       "\u001b[38;5;134m    \u001b[0m\u001b[38;5;134m┗━━ \u001b[0m\u001b[1;38;5;49mstore_dir: \u001b[0m\u001b[1;5;38;5;69mNone\u001b[0m\n"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "show_configuration()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1af5c51e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "00ad284355e74842a506610f5682cf52": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "099b668a8b524c62a5a371e2c7d81ab1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "28bcb558451e48098b6d60c646c7313a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2be95f38c22f4c92a6c57a7d8e69540f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5c327f32497448a5b4e5743ab2f8f644": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "610734464a6048de91122df7c702fe70": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e0c73a9b69d44abbba1f465b2b4de09d",
       "placeholder": "​",
       "style": "IPY_MODEL_099b668a8b524c62a5a371e2c7d81ab1",
       "tabbable": null,
       "tooltip": null,
       "value": " 250/250 [00:00&lt;00:00, 1402.56it/s]"
      }
     },
     "6353cf2c6c784f1c966cc8c0215d8374": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e52d674dce684792a207ad061a75f7cd",
       "max": 250.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_b22245f3b5dd4fb5a5af8bb502a2f831",
       "tabbable": null,
       "tooltip": null,
       "value": 250.0
      }
     },
     "7e84c69a1ad0446c8b5d4e295c426bf9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_00ad284355e74842a506610f5682cf52",
       "placeholder": "​",
       "style": "IPY_MODEL_bf03b8af50f844389c657d68401cc4f0",
       "tabbable": null,
       "tooltip": null,
       "value": "100%"
      }
     },
     "7f3a307df27e4893899a55719bca5650": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8c5d66f8ec6e406b82128a89ce50f4e6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "92fc1d0cc28140668d9a17e11496bfb1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a9660f30f15746389daf099000006a2f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7e84c69a1ad0446c8b5d4e295c426bf9",
        "IPY_MODEL_f8847563ef694f3da9b694d710055c35",
        "IPY_MODEL_c0a75373d10243e6964cceeac360ff06"
       ],
       "layout": "IPY_MODEL_c46171a887ad403bb48bf69b4be38c6a",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b22245f3b5dd4fb5a5af8bb502a2f831": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "bf03b8af50f844389c657d68401cc4f0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c0a75373d10243e6964cceeac360ff06": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2be95f38c22f4c92a6c57a7d8e69540f",
       "placeholder": "​",
       "style": "IPY_MODEL_7f3a307df27e4893899a55719bca5650",
       "tabbable": null,
       "tooltip": null,
       "value": " 45/45 [00:00&lt;00:00, 865.07it/s]"
      }
     },
     "c46171a887ad403bb48bf69b4be38c6a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d796e4d69c8348379a2022dadb943f8e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_f1cb0512d0cd407584b277ec150eb829",
        "IPY_MODEL_6353cf2c6c784f1c966cc8c0215d8374",
        "IPY_MODEL_610734464a6048de91122df7c702fe70"
       ],
       "layout": "IPY_MODEL_5c327f32497448a5b4e5743ab2f8f644",
       "tabbable": null,
       "tooltip": null
      }
     },
     "e0c73a9b69d44abbba1f465b2b4de09d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e52d674dce684792a207ad061a75f7cd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ea2c51017f7d44b5bbc44d697f0f04ef": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "f1cb0512d0cd407584b277ec150eb829": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_92fc1d0cc28140668d9a17e11496bfb1",
       "placeholder": "​",
       "style": "IPY_MODEL_8c5d66f8ec6e406b82128a89ce50f4e6",
       "tabbable": null,
       "tooltip": null,
       "value": "100%"
      }
     },
     "f8847563ef694f3da9b694d710055c35": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_28bcb558451e48098b6d60c646c7313a",
       "max": 45.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_ea2c51017f7d44b5bbc44d697f0f04ef",
       "tabbable": null,
       "tooltip": null,
       "value": 45.0
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
